@using QuestPDF.Fluent
@using QuestPDF.Helpers
@using QuestPDF.Infrastructure
@using QuestPdf;
@using System.Diagnostics

https://github.com/QuestPDF/QuestPDF

https://www.nuget.org/packages/QuestPDF/

https://github.com/QuestPDF/QuestPDF/tree/main/QuestPDF.Examples

https://github.com/QuestPDF/QuestPDF/tree/main/QuestPDF.ReportSample/Layouts

@functions {

  public static void TestQuickSar() {
    Document.Create(container => {
      container.Page(page => {
        page.Size(PageSizes.A4);
        page.Margin(2, Unit.Centimetre);
        page.PageColor(Colors.White);
        page.DefaultTextStyle(x => x.FontSize(20));
        page.Header().Text("Hello PDF!").SemiBold().FontSize(36).FontColor(Colors.Blue.Medium);
        page.Content()
            .PaddingVertical(1, Unit.Centimetre)
            .Column(x => {
              x.Spacing(20);
              x.Item().Text(Placeholders.LoremIpsum());
              x.Item().Image(Placeholders.Image(200, 100));
            });
        page.Footer()
            .AlignCenter()
            .Text(x => {
              x.Span("Page ");
              x.CurrentPageNumber();
            });
      });
    })
  .GeneratePdf("hello.pdf");
  }

  public static void TestInvoice() {
    var filePath = "invoice.pdf";
    var model = InvoiceDocumentDataSource.GetInvoiceDetails();
    var document = new InvoiceDocument(model);
    document.GeneratePdf(filePath);
    Process.Start("explorer.exe", filePath);
  }
}