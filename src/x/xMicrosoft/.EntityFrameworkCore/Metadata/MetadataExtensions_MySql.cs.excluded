using JetBrains.Annotations;
using System;
using xEFCore.xMySql.Metadata;

namespace Microsoft.EntityFrameworkCore.Metadata {
  public static class MetadataExtensions_MySql {

    public static MySqlPropertyAnnotations MySql([NotNull] this IMutableProperty property)
        => (MySqlPropertyAnnotations)MySql((IProperty)property);

    public static IMySqlPropertyAnnotations MySql([NotNull] this IProperty property)
        => new MySqlPropertyAnnotations(Check.NotNull(property, nameof(property)));

    public static MySqlEntityTypeAnnotations MySql([NotNull] this IMutableEntityType entityType)
        => (MySqlEntityTypeAnnotations)MySql((IEntityType)entityType);

    public static IMySqlEntityTypeAnnotations MySql([NotNull] this IEntityType entityType)
        => new MySqlEntityTypeAnnotations(Check.NotNull(entityType, nameof(entityType)));

    public static MySqlKeyAnnotations MySql([NotNull] this IMutableKey key)
        => (MySqlKeyAnnotations)MySql((IKey)key);

    public static IMySqlKeyAnnotations MySql([NotNull] this IKey key)
        => new MySqlKeyAnnotations(Check.NotNull(key, nameof(key)));

    public static MySqlIndexAnnotations MySql([NotNull] this IMutableIndex index)
        => (MySqlIndexAnnotations)MySql((IIndex)index);

    public static IMySqlIndexAnnotations MySql([NotNull] this IIndex index)
        => new MySqlIndexAnnotations(Check.NotNull(index, nameof(index)));

    public static MySqlModelAnnotations MySql([NotNull] this IMutableModel model)
        => (MySqlModelAnnotations)MySql((IModel)model);

    public static IMySqlModelAnnotations MySql([NotNull] this IModel model)
        => new MySqlModelAnnotations(Check.NotNull(model, nameof(model)));

  }
}